version: '2.4'
services:
  cabernet:
    container_name: cabernet
    image: ghcr.io/cabernetwork/cabernet:latest
    restart: unless-stopped # Do not change this
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ} # Can use any env variable. See "environment variables" section in the docs
    volumes:
      - ${APP_DATA_DIR}/data:/app/data
      - ${APP_DATA_DIR}/plugins_ext:/app/plugins_ext  # Plugins Data (Optional)
      - ${APP_DATA_DIR}/secrets:/app/.cabernet        # Ecryption key data (Optional)
    ports:
      - ${APP_PORT}:6077    # Web Interface Port
      - 5004:5004   # Port used to stream
    networks:
      - tipi_main_network # That should not be changed
    labels:
      # Main
      traefik.enable: true
      traefik.http.middlewares.cabernet-web-redirect.redirectscheme.scheme: https
      traefik.http.services.cabernet.loadbalancer.server.port: 6077 # Should be the same as the app internal port so for this example 9443
      # Web
      traefik.http.routers.cabernet-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.cabernet-insecure.entrypoints: web
      traefik.http.routers.cabernet-insecure.service: cabernet
      traefik.http.routers.cabernet-insecure.middlewares: cabernet-web-redirect
      # Websecure
      traefik.http.routers.cabernet.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.cabernet.entrypoints: websecure
      traefik.http.routers.cabernet.service: cabernet
      traefik.http.routers.cabernet.tls.certresolver: myresolver
      # Local domain
      traefik.http.routers.cabernet-local-insecure.rule: Host(`cabernet.${LOCAL_DOMAIN}`)
      traefik.http.routers.cabernet-local-insecure.entrypoints: web
      traefik.http.routers.cabernet-local-insecure.service: cabernet
      traefik.http.routers.cabernet-local-insecure.middlewares: cabernet-web-redirect
      # Local domain secure
      traefik.http.routers.cabernet-local.rule: Host(`cabernet.${LOCAL_DOMAIN}`)
      traefik.http.routers.cabernet-local.entrypoints: websecure
      traefik.http.routers.cabernet-local.service: cabernet
      traefik.http.routers.cabernet-local.tls: true